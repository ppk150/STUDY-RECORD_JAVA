import java.io.*;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

public class weekstudy_3 {
    public static void main(String[] args) throws IOException {

        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String T = bf.readLine();
        int testtime  = Integer.parseInt(T); // 명령 횟수를 스트링으로 받고 인트로 저장

        Queue<Integer> queue = new LinkedList<>();// 스택 선언

        int last = 0 ; // 큐 마지막 숫자 저장

        for(int i = 0 ; i < testtime ; i++){

            String[] TT = bf.readLine().split(" "); // 입력받는 String 배열

            if(TT.length == 2 && TT[0].equals("push")){ // 푸시 해서 2개 들어오묜
                //  int N = Integer.parseInt(TT[0]);// N 받음 (기존 도감 안의 수)
                int K = Integer.parseInt(TT[1]);// M 받음 (찾아야 하는 수)

                last = Integer.parseInt(TT[1]);
                queue.add(K); // 숫자 들온거 넣음

            }else{

                if(TT[0].equals("front") && queue.size() > 0){

                    System.out.println(queue.peek()); // 맨 위에꺼 출력

                }

                if(TT[0].equals("back") && queue.size() > 0){

                    System.out.println(last); // 맨 뒤에꺼 출력

                }

                if(TT[0].equals("front") && queue.size() <= 0 ||TT[0].equals("back") && queue.size() <= 0){

                    System.out.println(-1); // 맨 위에꺼 출력

                }

                if(TT[0].equals("pop") && queue.size() <= 0 ){

                    System.out.println(-1); // 하나 빼고, 뺀거 출력

                }

                if(TT[0].equals("pop") && queue.size() > 0 ){

                    System.out.println(queue.poll()); // 하나 빼고, 뺀거 출력

                }

                if(TT[0].equals("size")){

                    System.out.println(queue.size()); // 사이즈 출력

                }

                if(TT[0].equals("empty")){

                    if(queue.size() ==0){

                        System.out.println(1); // 비엇을때 1 출력

                    }else{

                        System.out.println(0); // 안볏을때 0 출력

                    }
                }
            }
        }
    }
}
